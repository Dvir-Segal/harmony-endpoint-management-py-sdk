name: Build SDK Package

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=dvir-segal
            -Dsonar.projectKey=Dvir-Segal_harmony-endpoint-management-py-sdk
            -Dsonar.branch.name=release

      - name: Check SonarCloud Quality Gate (Fail on High Severity)
        uses: sonarsource/sonarqube-quality-gate-action@master
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          organization: dvir-segal
          project_key: Dvir-Segal_harmony-endpoint-management-py-sdk
          condition: severity >= 'CRITICAL'

      # - name: Fail build if high severity issues exist
      #   run: |
      #     # Make the API request and get the result
      #     result=$(curl -s -u "token:${{ secrets.SONAR_TOKEN }}" \
      #       "https://sonarcloud.io/api/issues/search?componentKeys=Dvir-Segal_harmony-endpoint-management-py-sdk&severities=CRITICAL,MAJOR")

      #     # Output the result to help with debugging
      #     echo "SonarCloud API response: $result"

      #     # Extract the total number of issues
      #     total_issues=$(echo "$result" | jq '.paging.total')

      #     # Fail the build if there are any critical or major issues
      #     if [ "$total_issues" -gt 0 ]; then
      #       echo "Build failed: There are $total_issues high severity issues (Critical or Major).";
      #       exit 1
      #     else
      #       echo "No high severity issues found. Continuing build.";
      #     fi
      #   uses: snyk/actions/python@master
      #   continue-on-error: true # To make sure that SARIF upload gets called
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --sarif-file-output=snyk.sarif
      #     command: code test
      #     fail-on-issues: false
          
      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
      - name: Build SDK
        run: |
          python -m pip install -r ./requirements.txt
          export BRANCH_NAME=${GITHUB_REF#refs/heads/}
          export BUILD_JOB_ID=$GITHUB_RUN_ID
          export BUILD_VERSION=$(python setup.py --version)
          python ./sdk_generator/generate_sdk.py
        
      - uses: actions/upload-artifact@v4
        with:
          name: chkp_harmony_endpoint_management_sdk
          path: chkp_harmony_endpoint_management_sdk

      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb


      - if: success()  # Optional: Only run Trivy scan if build succeeds
        name: Scan ZIP File with Trivy
        run: |
          trivy fs --format table
    
